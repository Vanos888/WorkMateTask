// Code generated by ogen, DO NOT EDIT.

package task

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// CreateTask implements CreateTask operation.
	//
	// Создание бекграунд задачи.
	//
	// POST /v1/task/create
	CreateTask(ctx context.Context, req *CreateTaskRequest) (*CreateTaskResponse, error)
	// DeleteTask implements DeleteTask operation.
	//
	// Удаление бекграунд задачи.
	//
	// POST /v1/task/delete
	DeleteTask(ctx context.Context, req *DeleteTaskRequest) (*DeleteTaskResponse, error)
	// GetTaskStatus implements get-task-status operation.
	//
	// Получение статуса задачи.
	//
	// POST /v1/task/get-task-status
	GetTaskStatus(ctx context.Context, req *GetTaskStatusRequest) (*GetTaskStatusResponse, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h Handler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		baseServer: s,
	}, nil
}
